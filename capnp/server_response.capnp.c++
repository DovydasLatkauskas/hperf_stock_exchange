// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: server_response.capnp

#include "server_response.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<52> b_f81e4d188f5cb6b2 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    178, 182,  92, 143,  24,  77,  30, 248,
     22,   0,   0,   0,   1,   0,   1,   0,
    136,  78, 170, 211,  34, 111, 113, 187,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     22,   0,   0,   0,  99,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 118, 101, 114,  95, 114,
    101, 115, 112, 111, 110, 115, 101,  46,
     99,  97, 112, 110, 112,  58,  83, 101,
    114, 118, 101, 114,  82, 101, 115, 112,
    111, 110, 115, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,  67, 111,
    100, 101,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 115, 112, 111, 110, 115, 101,
     77, 115, 103,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f81e4d188f5cb6b2 = b_f81e4d188f5cb6b2.words;
#if !CAPNP_LITE
static const uint16_t m_f81e4d188f5cb6b2[] = {1, 0};
static const uint16_t i_f81e4d188f5cb6b2[] = {0, 1};
const ::capnp::_::RawSchema s_f81e4d188f5cb6b2 = {
  0xf81e4d188f5cb6b2, b_f81e4d188f5cb6b2.words, 52, nullptr, m_f81e4d188f5cb6b2,
  0, 2, i_f81e4d188f5cb6b2, nullptr, nullptr, { &s_f81e4d188f5cb6b2, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// ServerResponse
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t ServerResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t ServerResponse::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind ServerResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ServerResponse::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE



