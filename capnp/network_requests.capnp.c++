// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: network_requests.capnp

#include "network_requests.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<102> b_d3567a375bac1184 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    132,  17, 172,  91,  55, 122,  86, 211,
     41,   0,   0,   0,   1,   0,   2,   0,
    166, 115,  11,   7,  16, 251, 202, 196,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     22,   0,   0,   0, 184,   0,   0,   0,
     21,   0,   0,   0, 210,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47, 100, 101,
    102, 105, 110, 105, 116, 105, 111, 110,
    115,  47, 110, 101, 116, 119, 111, 114,
    107,  95, 114, 101, 113, 117, 101, 115,
    116, 115,  46,  99,  97, 112, 110, 112,
     58,  77,  97, 107, 101,  79, 114, 100,
    101, 114,  82, 101, 113, 117, 101, 115,
    116,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   0,   0,   0,   3,   0,   1,   0,
    156,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 113, 117, 101, 115, 116, 101,
    114,  73, 100,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 111,  99, 107,  73, 100,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 114, 100, 101, 114,  65, 109, 111,
    117, 110, 116,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 110, 105, 116,  80, 114, 105,  99,
    101,  67, 101, 110, 116, 115,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 114, 100, 101, 114,  84, 121, 112,
    101,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    127, 196,  77, 125, 101, 244, 116, 255,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d3567a375bac1184 = b_d3567a375bac1184.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d3567a375bac1184[] = {
  &s_ff74f4657d4dc47f,
};
static const uint16_t m_d3567a375bac1184[] = {2, 4, 0, 1, 3};
static const uint16_t i_d3567a375bac1184[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_d3567a375bac1184 = {
  0xd3567a375bac1184, b_d3567a375bac1184.words, 102, d_d3567a375bac1184, m_d3567a375bac1184,
  1, 5, i_d3567a375bac1184, nullptr, nullptr, { &s_d3567a375bac1184, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<30> b_ff74f4657d4dc47f = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    127, 196,  77, 125, 101, 244, 116, 255,
     41,   0,   0,   0,   2,   0,   0,   0,
    166, 115,  11,   7,  16, 251, 202, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    186,   0,   0,   0, 225,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47, 100, 101,
    102, 105, 110, 105, 116, 105, 111, 110,
    115,  47, 110, 101, 116, 119, 111, 114,
    107,  95, 114, 101, 113, 117, 101, 115,
    116, 115,  46,  99,  97, 112, 110, 112,
     58,  79, 114, 100, 101, 114,  84, 121,
    112, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 117, 121,   0,   0,   0,   0,   0,
    115, 101, 108, 108,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ff74f4657d4dc47f = b_ff74f4657d4dc47f.words;
#if !CAPNP_LITE
static const uint16_t m_ff74f4657d4dc47f[] = {0, 1};
const ::capnp::_::RawSchema s_ff74f4657d4dc47f = {
  0xff74f4657d4dc47f, b_ff74f4657d4dc47f.words, 30, nullptr, m_ff74f4657d4dc47f,
  0, 2, nullptr, nullptr, nullptr, { &s_ff74f4657d4dc47f, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(OrderType_ff74f4657d4dc47f, ff74f4657d4dc47f);
static const ::capnp::_::AlignedData<86> b_df7327cd74587253 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     83, 114,  88, 116, 205,  39, 115, 223,
     41,   0,   0,   0,   1,   0,   1,   0,
    166, 115,  11,   7,  16, 251, 202, 196,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    227,   0,   0,   0, 106,   1,   0,   0,
     21,   0,   0,   0, 226,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47, 100, 101,
    102, 105, 110, 105, 116, 105, 111, 110,
    115,  47, 110, 101, 116, 119, 111, 114,
    107,  95, 114, 101, 113, 117, 101, 115,
    116, 115,  46,  99,  97, 112, 110, 112,
     58,  67,  97, 110,  99, 101, 108,  79,
    114, 100, 101, 114,  82, 101, 113, 117,
    101, 115, 116,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 113, 117, 101, 115, 116, 101,
    114,  73, 100,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 111,  99, 107,  73, 100,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 114, 100, 101, 114,  84, 121, 112,
    101,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    127, 196,  77, 125, 101, 244, 116, 255,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 110,  99, 101, 108,  79, 114,
    100, 101, 114,  73, 100,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_df7327cd74587253 = b_df7327cd74587253.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_df7327cd74587253[] = {
  &s_ff74f4657d4dc47f,
};
static const uint16_t m_df7327cd74587253[] = {3, 2, 0, 1};
static const uint16_t i_df7327cd74587253[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_df7327cd74587253 = {
  0xdf7327cd74587253, b_df7327cd74587253.words, 86, d_df7327cd74587253, m_df7327cd74587253,
  1, 4, i_df7327cd74587253, nullptr, nullptr, { &s_df7327cd74587253, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<56> b_834fff34f4f64c61 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     97,  76, 246, 244,  52, 255,  79, 131,
     41,   0,   0,   0,   1,   0,   1,   0,
    166, 115,  11,   7,  16, 251, 202, 196,
      1,   0,   7,   0,   0,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   1,   0,   0, 249,   1,   0,   0,
     21,   0,   0,   0, 194,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47, 100, 101,
    102, 105, 110, 105, 116, 105, 111, 110,
    115,  47, 110, 101, 116, 119, 111, 114,
    107,  95, 114, 101, 113, 117, 101, 115,
    116, 115,  46,  99,  97, 112, 110, 112,
     58,  78, 101, 116, 119, 111, 114, 107,
     82, 101, 113, 117, 101, 115, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 107, 101,  79, 114, 100, 101,
    114,  82, 101, 113, 117, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    132,  17, 172,  91,  55, 122,  86, 211,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 110,  99, 101, 108,  79, 114,
    100, 101, 114,  82, 101, 113, 117, 101,
    115, 116,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     83, 114,  88, 116, 205,  39, 115, 223,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_834fff34f4f64c61 = b_834fff34f4f64c61.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_834fff34f4f64c61[] = {
  &s_d3567a375bac1184,
  &s_df7327cd74587253,
};
static const uint16_t m_834fff34f4f64c61[] = {1, 0};
static const uint16_t i_834fff34f4f64c61[] = {0, 1};
const ::capnp::_::RawSchema s_834fff34f4f64c61 = {
  0x834fff34f4f64c61, b_834fff34f4f64c61.words, 56, d_834fff34f4f64c61, m_834fff34f4f64c61,
  2, 2, i_834fff34f4f64c61, nullptr, nullptr, { &s_834fff34f4f64c61, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// MakeOrderRequest
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t MakeOrderRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t MakeOrderRequest::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind MakeOrderRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MakeOrderRequest::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CancelOrderRequest
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CancelOrderRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t CancelOrderRequest::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CancelOrderRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CancelOrderRequest::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// NetworkRequest
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t NetworkRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t NetworkRequest::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind NetworkRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* NetworkRequest::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE



